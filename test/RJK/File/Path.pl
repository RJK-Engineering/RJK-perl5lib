use strict;
use warnings;

use RJK::File::Paths;
use RJK::File::Path;

my $p = RJK::File::Paths::get('c:\file.ext');

use Data::Dump;
dd $p;

# "" is overloaded
print "$p\n";
print $p ."\n";
my %h = ($p => 1); print ((keys %h)[0], "\n");

# cmp is overloaded (lt, gt, le, ge, eq, ne are autogenerated)
my $p2 = RJK::File::Paths::get('c:\file.ext'); print (($p eq $p2), "\n");
$p2 = RJK::File::Paths::get('c:\file123.ext'); print (($p eq $p2), "\n");

# accessors
print $p->path ."\n";
print $p->parent // "" ."\n";
print $p->name ."\n";
print $p->volume ."\n";
print $p->directories ."\n";
print $p->basename ."\n";
print $p->extension ."\n";

$p = RJK::File::Paths::get('c:\file.ext\dir....\..\..\.\a..exe.');
$p = RJK::File::Paths::get('c:\\a');
$p = RJK::File::Paths::get('c:\\');
$p = RJK::File::Paths::get('c:');
$p = RJK::File::Paths::get('c:\file.ext\..\a\b\c\..\..\q\..\..\r\s');
dd $p;
$p = $p->normalize();
dd $p;

print $p->parent ."\n";
print $p->volume ."\n";
print $p->basename ."\n";
print $p->extension ."\n";
